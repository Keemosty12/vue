diff --git a/assets/services/cart-service.js b/assets/services/cart-service.js
index 26f5528a1..8d459ced6 100644
--- a/assets/services/cart-service.js
+++ b/assets/services/cart-service.js
@@ -144,26 +144,34 @@ export function getCartTotalItems(cart) {
     return cart.items.reduce((acc, item) => (acc + item.quantity), 0);
 }
 
+/**
+ * Gets the full info on the shopping cart
+ *
+ * @param {CartCollection} cart
+ * @returns {Array}
+ */
 export async function getFullShoppingCart(cart) {
-    const productIds = this.cart.items.map((item) => item.product);
+    const productIds = cart.items.map((item) => item.product);
 
     const [colorsResponse, productsResponse] = await Promise.all([
         fetchColors(),
         fetchProductsById(productIds),
     ]);
 
+    const mappedColors = {};
+
     // Map all colors to our object dictionary by @id
     colorsResponse.data['hydra:member'].forEach((color) => {
-        this.colors[color['@id']] = color;
+        mappedColors[color['@id']] = color;
     });
 
     // Create items with complete product, color & quantity info
-    this.completeCartItems = productsResponse.data['hydra:member'].map((product) => {
+    return productsResponse.data['hydra:member'].map((product) => {
         const cartItem = this.cart.items.find((item) => item.product === product['@id']);
 
         return {
             product,
-            color: cartItem.color ? this.colors[cartItem.color] : null,
+            color: cartItem.color ? mappedColors[cartItem.color] : null,
             quantity: cartItem.quantity,
         };
     });
